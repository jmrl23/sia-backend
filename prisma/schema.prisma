// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ----------

enum Role {
  ADMIN
  RESIDENT
}

enum ResidentStatus {
  ACTIVE
  DECEASED
  RELOCATED
}

model User {
  id             String   @unique @default(uuid())
  dateCreated    DateTime @default(now())
  dateUpdated    DateTime @updatedAt
  residentNumber Int      @unique @default(autoincrement())

  enabled  Boolean @default(true)
  email    String
  password String

  role           Role           @default(RESIDENT)
  residentStatus ResidentStatus @default(ACTIVE)

  UserInformation   UserInformation     @relation(fields: [userInformationId], references: [id])
  userInformationId String
  UserResetPassword UserResetPassword[]
  LuponCase         LuponCase[]
  Clearance         Clearance[]

  @@unique([email])
}

enum Sex {
  MALE
  FEMALE
  INTERSEX
}

enum BloodType {
  O_POSITIVE
  O_NEGATIVE
  A_POSITIVE
  A_NEGATIVE
  B_POSITIVE
  B_NEGATIVE
  AB_POSITIVE
  AB_NEGATIVE
}

enum MaritalStatus {
  SINGLE
  MARRIED
  DIVORCED
  SEPARATED
  WIDOWED
}

model UserInformation {
  id          String   @unique @default(uuid())
  dateCreated DateTime @default(now())
  dateUpdated DateTime @updatedAt

  firstName  String
  middleName String?
  lastName   String
  nameSuffix String?

  contactNumber  String?  @unique
  dateOfBirth    DateTime
  occupation     String?
  precinctNumber String?

  emergencyContactPerson       String?
  emergencyContactRelationship String?
  emergencyContactNumber       String?

  streetAddress String
  city          String @default("Taguig City")
  barangay      String @default("North Signal Village")

  sex           Sex
  bloodType     BloodType?
  maritalStatus MaritalStatus? @default(SINGLE)

  Picture   File?   @relation(fields: [pictureId], references: [id])
  pictureId String? @unique
  User      User[]

  @@fulltext([firstName, middleName, lastName, nameSuffix, contactNumber])
}

model UserResetPassword {
  id          String   @unique @default(uuid())
  dateCreated DateTime @default(now())
  dateUpdated DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String

  code     String
  consumed Boolean  @default(false)
  expires  DateTime
}

model File {
  id          String   @unique @default(uuid())
  dateCreated DateTime @default(now())
  dateUpdated DateTime @updatedAt

  fileId   String? @unique
  name     String
  mimeType String
  size     Int

  UserInformation UserInformation[]
  LuponCase       LuponCase[]

  @@index([fileId])
}

enum ClearanceType {
  EMPLOYMENT
  POSTAL_ID
  SENIOR_CITIZEN
  BUSINESS_CLOSURE
  BUSINESS
  ELECTRICAL
  HOUSE
  FENCING
  HOUSE_ASSESSMENT
  OTHERS
}

model Clearance {
  id          String   @unique @default(uuid())
  dateCreated DateTime @default(now())
  dateUpdated DateTime @updatedAt

  clearanceType         ClearanceType
  clearanceTypeOthers   String?
  purposeOfClearance    String
  registerVoterBarangay Boolean
  businessAddress       String
  nationality           String
  placeOfBirth          String
  numberOfYearsLiving   Int
  confirmed             Boolean       @default(false)

  User   User   @relation(fields: [userId], references: [id])
  userId String
}

enum LuponCaseStatus {
  PENDING
  DISMISSED
  REPUDIATED
  DROPPED
  CERTIFIED_TO_FILE_ACTION
  OUTSIDE_JURISDICTION_OF_BARANGAY
}

enum LuponActionTaken {
  MEDIATION
  CONCILATION_EVIDENCE
}

model LuponCase {
  id          String   @unique @default(uuid())
  dateCreated DateTime @default(now())
  dateUpdated DateTime @updatedAt
  caseNumber  Int      @unique @default(autoincrement())

  title                String
  respondentName       String
  dateFiled            DateTime  @default(now())
  dateOfConfrontation  DateTime?
  dateOfSettled        DateTime?
  remarks              String
  mainPointOfAgreement String

  actionTaken LuponActionTaken?
  status      LuponCaseStatus   @default(PENDING)

  evidenceFile   File?   @relation(fields: [evidenceFileId], references: [id])
  evidenceFileId String?

  User   User   @relation(fields: [userId], references: [id])
  userId String
}
